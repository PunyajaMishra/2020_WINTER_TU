; Listing generated by Microsoft (R) Optimizing Compiler Version 19.22.27905.0 

	TITLE	c:\users\punya\source\repos\cois2300-lab\cois2300-lab\cois2300-lab.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp_?precision@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z:PROC
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	@__security_check_cookie@4:PROC
PUBLIC	_main
PUBLIC	__real@358637bd
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@412e848000000000
EXTRN	__fltused:DWORD
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@358637bd
CONST	SEGMENT
__real@358637bd DD 0358637bdr			; 1e-06
CONST	ENDS
; Function compile flags: /Odtp
; File C:\Users\punya\source\repos\COIS2300-Lab\COIS2300-Lab\COIS2300-Lab.cpp
;	COMDAT _main
_TEXT	SEGMENT
_inc$ = -12						; size = 4
_sum$ = -8						; size = 4
_i$1 = -4						; size = 4
_main	PROC						; COMDAT

; 12   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 13   : 	cout.precision(10);

	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?precision@ios_base@std@@QAE_J_J@Z

; 14   : 	float inc = 0.000001, sum = 0.0;

	movss	xmm0, DWORD PTR __real@358637bd
	movss	DWORD PTR _inc$[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _sum$[ebp], xmm0

; 15   : 	for (float i = 1.0; i <= 1000000.0;)

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _i$1[ebp], xmm0
$LN2@main:
	cvtss2sd xmm0, DWORD PTR _i$1[ebp]
	movsd	xmm1, QWORD PTR __real@412e848000000000
	comisd	xmm1, xmm0
	jb	SHORT $LN3@main

; 16   : 	{
; 17   : 		sum += (1.0 / i);

	cvtss2sd xmm0, DWORD PTR _i$1[ebp]
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	divsd	xmm1, xmm0
	cvtss2sd xmm0, DWORD PTR _sum$[ebp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _sum$[ebp], xmm0

; 18   : 		i += 1.0;

	cvtss2sd xmm0, DWORD PTR _i$1[ebp]
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR _i$1[ebp], xmm0

; 19   : 	}

	jmp	SHORT $LN2@main
$LN3@main:

; 20   : 
; 21   : 	cout << sum;

	push	ecx
	movss	xmm0, DWORD PTR _sum$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@M@Z

; 22   : 	cin.get();

	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ

; 23   : 	return 0;

	xor	eax, eax

; 24   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
